<core:FragmentDefinition xmlns="com.thy.ux.annualleaveplanning.ui"
    xmlns:core="sap.ui.core">
    <Dialog id="CreateEditEventDialog" closed=".onAfterEventDialogClosed" cancelled=".onEventCancelled" class="spp-eventeditor"
    showPointer="false" alignment="center">
        <header>
            <DialogHeader id="CreateEditEventDialogHeader" title="{planModel>eventEdit/title}" closed=".onEventDialogClosed" />
        </header>
        <content>
            <EventEditor id="CreateEditEventEditor">
                <items>
                    <FormField id="FormFieldLeaveType" firstChild="true" empty="{= ${planModel>eventEdit/leaveType/key} === '' || ${planModel>eventEdit/leaveType/key} === null }"
                    fieldType="combo">
                        <label>
                            <FormLabel id="FormLabelLeaveType" text="{i18n>leaveType}" for="FormComboLeaveType" />
                        </label>
                        <field>
                            <FormComboBox id="FormComboLeaveType" key="{planModel>eventEdit/leaveType/key}" value="{planModel>eventEdit/leaveType/value}" name="LeaveType" icon="{planModel>eventEdit/leaveType/icon}" 
                            editable="{planModel>eventEdit/new}">
                                <comboPicker>
                                    <PickerListWidget id="FormPickerLeaveType" multiselect="false" items="{planModel>leaveTypes}">
                                        <items>
                                            <PickerListWidgetItem id="FormPickerItemLeaveType" icon="{planModel>color}" key="{planModel>type}" value="{planModel>description}" selected="{= ${planModel>eventEdit/leaveType/key} === ${planModel>type} }" />
                                        </items>
                                    </PickerListWidget>
                                </comboPicker>
                            </FormComboBox>
                        </field>
                    </FormField>



                    <FormField id="FormFieldStartDate" containsFocus="true" empty="{= ${planModel>eventEdit/startDate} === null }">
                        <label>
                            <FormLabel id="FormLabelStartDate" text="{i18n>leaveStartDate}" for="FormInputStartDate" />

                        </label>
                        <field>
                            <FormDatePicker id="FormInputStartDate" value="{planModel>eventEdit/startDate}" selectDate=".onCallDatePicker" />
                        </field>
                    </FormField>

                    <FormField id="FormFieldEndDate" lastChild="true" containsFocus="true" empty="{= ${planModel>eventEdit/endDate} === null }">
                        <label>
                            <FormLabel id="FormLabelEndDate" text="{i18n>leaveEndDate}" for="FormInputEndDate" />

                        </label>
                        <field>
                            <FormDatePicker id="FormInputEndDate" value="{planModel>eventEdit/endDate}" selectDate=".onCallDatePicker" />
                        </field>
                    </FormField>
                </items>
                <toolbar>
                    <Toolbar id="CreateEditEventDialogToolbar">
                        <items>
                            <Button id="CreateEditEventDialogSaveAction" label="{i18n>saveAction}" raised="true" firstChild="true" class="spp-blue" press=".onEventSave" />
                            <Button id="CreateEditEventDialogDeleteAction"
                                icon="spp-icon-trash"
                             label="{i18n>deleteAction}" raised="true" firstChild="false" class="spp-red" press=".onEventDelete" visible="{= !${planModel>eventEdit/new} }"/>
                            <Button id="CreateEditEventDialogCancelAction" label="{i18n>cancelAction}" lastChild="true" press=".onEventCancelled" />
                        </items>
                    </Toolbar>
                </toolbar>
            </EventEditor>
        </content>
    </Dialog>
</core:FragmentDefinition>